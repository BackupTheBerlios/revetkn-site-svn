<?xml version="1.0" encoding="UTF-8"?>

<!--
	Copyright (c) 2006 Mark Allen [mark.a.allen@gmail.com]
	
	Permission is hereby granted, free of charge, to any person obtaining a
	copy of this software and associated documentation files (the "Software"), 
	to deal in the Software without restriction, including without limitation
	the rights to use, copy, modify, merge, publish, distribute, sublicense,
	and/or sell copies of the Software, and to permit persons to whom the
	Software is furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
	THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
	FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
	DEALINGS IN THE SOFTWARE.
	
	@author Mark Allen mark.a.allen@gmail.com
	@version $Id$
	@since 0.1
	!-->

<project name="revetkn.com" default="help">

	<!-- Import standard build properties and classpaths -->
	<import file="build-properties.xml" />

	<!-- Displays usage information [default target] -->
	<target name="help">

		<echo message="" />
		<echo message="${project.name} build file" />
		<echo message="-------------------------------" />
		<echo message="" />
		<echo message="Available targets are:" />
		<echo message="" />
		<echo message="compile-app		--> Builds the application source tree" />
		<echo message="compile-tests	--> Builds the automated test source tree" />
		<echo message="dist	        	--> Creates a distributable JAR" />
		<echo message="clean        	--> Deletes build artifacts" />
		<echo message="javadoc      	--> Generates API documentation" />
		<echo message="run-tests		--> Runs automated tests" />

	</target>

	<target name="deploy" depends="war">
		<deploy url="http://localhost:8080/manager" username="admin" password="xxxxxxxx" path="/site" war="${build.dir}/${war.name}" />
	</target>

	<target name="undeploy">
		<undeploy url="http://localhost:8080/manager" username="admin" password="xxxxxxxx" path="/site" />
	</target>

	<target name="stop">
		<stop url="http://localhost:8080/manager" username="admin" password="xxxxxxxx" path="/site" />
	</target>

	<!-- Builds application source -->
	<target name="compile-app">

		<echo message="Building source tree..." />

		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.classes.dir}" />

		<javac srcdir="${src.dir}" destdir="${build.classes.dir}" source="${java.code.version}" target="${java.code.version}" classpathref="external.jars.classpath" />

	</target>

	<!-- Builds unit test source -->
	<target name="compile-tests">

		<echo message="Building tests..." />

		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.classes.dir}" />

		<javac srcdir="${src.test.dir}" destdir="${build.classes.dir}" source="${java.code.version}" target="${java.code.version}" classpathref="external.jars.classpath" />

	</target>

	<!-- Builds a distributable WAR -->
	<target name="war" depends="clean, compile-app">

		<echo message="Building ${war.name}..." />

		<war destfile="${build.dir}/${war.name}" webxml="${web.dir}/WEB-INF/web.xml">

			<lib dir="${lib.dir}">
				<include name="**/*.jar" />
				<exclude name="**/*mock*.jar" />
				<exclude name="**/junit*.jar" />
				<exclude name="**/servlet-api*.jar" />
			</lib>

			<classes dir="${build.classes.dir}">
				<exclude name="**/*Tests.class" />
			</classes>

			<classes dir="${config.dir}" />

			<fileset dir="${web.dir}">
				<exclude name="WEB-INF/web.xml" />
			</fileset>

			<manifest>
				<attribute name="Implementation-Title" value="${project.name}" />
				<attribute name="Implementation-Version" value="${project.version}" />
				<attribute name="Implementation-Vendor" value="revetkn.com" />
				<attribute name="Implementation-Vendor-Id" value="com.revetkn" />
				<attribute name="Built-By" value="${user.name}" />
			</manifest>

		</war>

	</target>

	<!-- Runs unit and integration tests and displays a result report. -->
	<target name="run-tests" depends="compile-app, compile-tests">

		<echo message="Running tests..." />

		<delete dir="${junit.reports.dir}" />
		<mkdir dir="${junit.reports.dir}" />

		<junit printsummary="yes" haltonfailure="no">

			<classpath refid="entire.classpath" />
			<formatter type="xml" />

			<batchtest fork="yes" todir="${junit.reports.dir}">
				<fileset dir="${build.classes.dir}">
					<include name="**/*Tests.class" />
					<exclude name="**/Abstract*Tests.class" />
				</fileset>
			</batchtest>

		</junit>

		<echo message="Generating test report..." />

		<junitreport todir="${junit.reports.dir}">

			<fileset dir="${junit.reports.dir}">
				<include name="TEST-*Tests.xml" />
				<exclude name="TEST-*Abstract*Tests.xml" />
			</fileset>

			<report format="frames" todir="${junit.reports.dir}" />

		</junitreport>

		<echo message="Displaying test report..." />

		<exec executable="${browser.executable}" spawn="true">
			<arg value="${junit.reports.dir}${file.separator}index.html" />
		</exec>

	</target>

	<!-- Builds javadoc -->
	<target name="javadoc">

		<mkdir dir="${javadoc.reports.dir}" />

		<javadoc sourcepath="${src.dir}"
			destdir="${javadoc.reports.dir}"
			classpathref="external.jars.classpath"
			source="${java.code.version}"
			access="protected"
			author="true"
			doctitle="${project.name} v. ${project.version} API"
			windowtitle="${project.name} v. ${project.version} API"
			nodeprecated="false"
			nodeprecatedlist="false"
			overview="${javadoc.overview}"
			noindex="false"
			nonavbar="false"
			notree="false"
			packagenames="${project.basepackage}.*"
			splitindex="true"
			stylesheetfile="${misc.dir}/javadoc.css"
			use="true"
			version="true">

			<!-- Link to remote javadocs -->
			<link href="${j2se.api.link}" />
			<link href="${j2ee.api.link}" />
			<link href="${spring.api.link}" />
			<link href="${aop.api.link}" />

		</javadoc>

		<echo message="Displaying Javadoc..." />

		<exec executable="${browser.executable}" spawn="true">
			<arg value="${javadoc.reports.dir}${file.separator}index.html" />
		</exec>

	</target>

	<!-- Removes stale build artifacts -->
	<target name="clean">

		<echo message="Cleaning build artifacts..." />

		<delete dir="${build.dir}" />
		<delete dir="${reports.dir}" />

	</target>

</project>